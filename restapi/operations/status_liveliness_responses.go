// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bureau14/qdb-api-rest/models"
)

// StatusLivelinessOKCode is the HTTP code returned for type StatusLivelinessOK
const StatusLivelinessOKCode int = 200

/*StatusLivelinessOK Successful operation

swagger:response statusLivelinessOK
*/
type StatusLivelinessOK struct {
}

// NewStatusLivelinessOK creates StatusLivelinessOK with default headers values
func NewStatusLivelinessOK() *StatusLivelinessOK {

	return &StatusLivelinessOK{}
}

// WriteResponse to the client
func (o *StatusLivelinessOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// StatusLivelinessInternalServerErrorCode is the HTTP code returned for type StatusLivelinessInternalServerError
const StatusLivelinessInternalServerErrorCode int = 500

/*StatusLivelinessInternalServerError Bad Request.

swagger:response statusLivelinessInternalServerError
*/
type StatusLivelinessInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.QdbError `json:"body,omitempty"`
}

// NewStatusLivelinessInternalServerError creates StatusLivelinessInternalServerError with default headers values
func NewStatusLivelinessInternalServerError() *StatusLivelinessInternalServerError {

	return &StatusLivelinessInternalServerError{}
}

// WithPayload adds the payload to the status liveliness internal server error response
func (o *StatusLivelinessInternalServerError) WithPayload(payload *models.QdbError) *StatusLivelinessInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the status liveliness internal server error response
func (o *StatusLivelinessInternalServerError) SetPayload(payload *models.QdbError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatusLivelinessInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
