// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bureau14/qdb-api-rest/models"
)

// StatusReadinessOKCode is the HTTP code returned for type StatusReadinessOK
const StatusReadinessOKCode int = 200

/*StatusReadinessOK Successful operation

swagger:response statusReadinessOK
*/
type StatusReadinessOK struct {
}

// NewStatusReadinessOK creates StatusReadinessOK with default headers values
func NewStatusReadinessOK() *StatusReadinessOK {

	return &StatusReadinessOK{}
}

// WriteResponse to the client
func (o *StatusReadinessOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// StatusReadinessInternalServerErrorCode is the HTTP code returned for type StatusReadinessInternalServerError
const StatusReadinessInternalServerErrorCode int = 500

/*StatusReadinessInternalServerError Bad Request.

swagger:response statusReadinessInternalServerError
*/
type StatusReadinessInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.QdbError `json:"body,omitempty"`
}

// NewStatusReadinessInternalServerError creates StatusReadinessInternalServerError with default headers values
func NewStatusReadinessInternalServerError() *StatusReadinessInternalServerError {

	return &StatusReadinessInternalServerError{}
}

// WithPayload adds the payload to the status readiness internal server error response
func (o *StatusReadinessInternalServerError) WithPayload(payload *models.QdbError) *StatusReadinessInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the status readiness internal server error response
func (o *StatusReadinessInternalServerError) SetPayload(payload *models.QdbError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatusReadinessInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
